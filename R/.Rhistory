axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.subtitle = element_text(hjust = 0.5, size = 20, face = 'bold')
)
plot_8 <- plot.reduced.dim(object = list.of.objects.filt.2$sc_10x_5cl,
reduction = 'pca_umap',
assay = 'SCT',
clust.method = 'metadata',
column = 'celltype', add.label = F, label.size = 7) +
ggtitle('SCT+Ground Truth') +
theme(axis.line.y = element_blank(),
axis.line.x = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
plot.title = element_text(hjust = 0.5, size = 20, face = 'bold'),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.title = element_text(face = 'bold', color = 'black', size = 12),
legend.text = element_text(face = 'bold', color = 'black', size = 12)
) + guides(color=guide_legend(override.aes = list(size=5),title = ''))
library(ggpubr)
library(ggplotify)
list.of.boxplots <- list()
list.of.boxplots[[1]] <- ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),],
mapping = aes(y = Score_scaled, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('Real Life Samples') +
ylab('Score') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold'),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
list.of.boxplots[[2]] <- ggplot(data = all_results[all_results$sample%in%c("sc_10x","sc_10x_5cl","sc_CELseq2","sc_Dropseq","sc_Celseq2_5cl_p1","sc_Celseq2_5cl_p2","sc_Celseq2_5cl_p3"),],
mapping = aes(y = Score_scaled, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('Cell Line Samples') +
ylab('Score') + xlab('Clustering Method') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold'),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
boxplots <- ggarrange(plotlist = list.of.boxplots, nrow = 2, ncol = 1, common.legend = T, legend = 'top', labels = c('A','B'), font.label = list(size=24))
groundtruth_1 <- ggarrange(plot_2, plot_4, nrow = 1, ncol = 2, labels = c('F','G'), font.label = list(size=24), common.legend = T, legend = 'bottom')  + guides(fill=guide_legend(nrow=2,byrow=TRUE))
labels_1 <- ggarrange(plot_1, plot_3,
ncol = 2, nrow = 1,
labels = c('D','E'), font.label = list(size=24))
smart_seq <- ggarrange(labels_1, groundtruth_1, ncol = 1, nrow = 2)
groundtruth_2 <- ggarrange(plot_6, plot_8, nrow = 1, ncol = 2, labels = c('J','K'), font.label = list(size=24), common.legend = T, legend = 'bottom') + guides(fill=guide_legend(nrow=2,byrow=TRUE))
labels_2 <- ggarrange(plot_5, plot_7,
ncol = 2, nrow = 1,
labels = c('H','I'), font.label = list(size=24))
tenx <- ggarrange(labels_2, groundtruth_2, ncol = 1, nrow = 2)
fig1 <- annotate_figure(ggarrange(annotate_figure(p = annotate_figure(p = smart_seq, top = text_grob("", size = 25)), top = text_grob("Pancreas: SmartSeq2", size = 25))),
top = text_grob("", size = 30))
fig2 <- annotate_figure(ggarrange(annotate_figure(p = annotate_figure(p = tenx, top = text_grob("", size = 25)), top = text_grob("5 Cell Line: 10x", size = 25))),
top = text_grob("", size = 30))
fig3 <- annotate_figure(p = ggarrange(fig1, fig2, nrow = 2, ncol = 1),
top = text_grob("Good vs Bad Cases", size = 40, face = 'bold'))
fig4 <- ggarrange(annotate_figure(annotate_figure(p = ggarrange(as.ggplot(hm), nrow = 1, ncol = 1), top = text_grob("", size = 25)),
top = text_grob("Cluster Assignment Scores", size = 40, face = 'bold')), fig3, ncol = 2, nrow = 1, labels = c('C',''), font.label = list(size=24))
ggpubr::ggarrange(plotlist = list(boxplots,fig4), ncol=1)
ggpubr::ggarrange(plotlist = list(boxplots,fig4), ncol=1)
png(file = '/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/figure_1.png',
width = 1500, height = 2000)
ggpubr::ggarrange(plotlist = list(boxplots,fig4), ncol=1)
dev.off()
list.of.boxplots[[1]] <- ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),],
mapping = aes(y = Score_scaled, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('Real Life Samples') +
ylab('Score') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
list.of.boxplots[[2]] <- ggplot(data = all_results[all_results$sample%in%c("sc_10x","sc_10x_5cl","sc_CELseq2","sc_Dropseq","sc_Celseq2_5cl_p1","sc_Celseq2_5cl_p2","sc_Celseq2_5cl_p3"),],
mapping = aes(y = Score_scaled, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('Cell Line Samples') +
ylab('Score') + xlab('Clustering Method') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
boxplots <- ggarrange(plotlist = list.of.boxplots, nrow = 2, ncol = 1, common.legend = T, legend = 'top', labels = c('A','B'), font.label = list(size=24))
png(file = '/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/figure_1.png',
width = 1500, height = 2000)
ggpubr::ggarrange(plotlist = list(boxplots,fig4), ncol=1)
dev.off()
boxplots <- ggarrange(plotlist = list.of.boxplots, nrow = 2, ncol = 1, common.legend = T, legend = 'top', labels = c('A','B'), font.label = list(size=24, face='bold'))
groundtruth_1 <- ggarrange(plot_2, plot_4, nrow = 1, ncol = 2, labels = c('F','G'), font.label = list(size=24, face='bold'), common.legend = T, legend = 'bottom')  + guides(fill=guide_legend(nrow=2,byrow=TRUE))
labels_1 <- ggarrange(plot_1, plot_3,
ncol = 2, nrow = 1,
labels = c('D','E'), font.label = list(size=24))
smart_seq <- ggarrange(labels_1, groundtruth_1, ncol = 1, nrow = 2)
groundtruth_2 <- ggarrange(plot_6, plot_8, nrow = 1, ncol = 2, labels = c('J','K'), font.label = list(size=24, face='bold'), common.legend = T, legend = 'bottom') + guides(fill=guide_legend(nrow=2,byrow=TRUE))
labels_2 <- ggarrange(plot_5, plot_7,
ncol = 2, nrow = 1,
labels = c('H','I'), font.label = list(size=24, face='bold'))
tenx <- ggarrange(labels_2, groundtruth_2, ncol = 1, nrow = 2)
fig1 <- annotate_figure(ggarrange(annotate_figure(p = annotate_figure(p = smart_seq, top = text_grob("", size = 25)), top = text_grob("Pancreas: SmartSeq2", size = 25))),
top = text_grob("", size = 30))
fig2 <- annotate_figure(ggarrange(annotate_figure(p = annotate_figure(p = tenx, top = text_grob("", size = 25)), top = text_grob("5 Cell Line: 10x", size = 25))),
top = text_grob("", size = 30))
fig3 <- annotate_figure(p = ggarrange(fig1, fig2, nrow = 2, ncol = 1),
top = text_grob("Good vs Bad Cases", size = 40, face = 'bold'))
fig4 <- ggarrange(annotate_figure(annotate_figure(p = ggarrange(as.ggplot(hm), nrow = 1, ncol = 1), top = text_grob("", size = 25)),
top = text_grob("Cluster Assignment Scores", size = 40, face = 'bold')), fig3, ncol = 2, nrow = 1, labels = c('C',''), font.label = list(size=24))
png(file = '/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/figure_1.png',
width = 1500, height = 2000)
ggpubr::ggarrange(plotlist = list(boxplots,fig4), ncol=1)
dev.off()
list.of.boxplots <- list()
ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),'ARI'],
mapping = aes(y = Score_scaled, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('') +
ylab('Score') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),'ARI']
all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),'ARI']
list.of.boxplots[[1]] <- ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),],
mapping = aes(y = ARI, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('') +
ylab('Score') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
list.of.boxplots
list.of.boxplots <- list()
list.of.boxplots[[1]] <- ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),],
mapping = aes(y = ARI, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('') +
ylab('ARI') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
list.of.boxplots[[2]] <- ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),],
mapping = aes(y = NMI, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('') +
ylab('NMI') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
list.of.boxplots[[3]] <- ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),],
mapping = aes(y = ASW, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('') +
ylab('ASW') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
ggarrange(plotlist = list.of.boxplots[1:3], ncol = 3, nrow = 1, labels = 'A', font.label = list(size = 24, face = 'bold'))
unique(all_results$sample)
list.of.boxplots[[4]] <- ggplot(data = all_results[all_results$sample%in%c("sc_10x_5cl","sc_CELseq2","sc_Dropseq","sc_Celseq2_5cl_p1","sc_Celseq2_5cl_p2","sc_Celseq2_5cl_p3"),],
mapping = aes(y = ARI, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('') +
ylab('ARI') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
list.of.boxplots[[5]] <- ggplot(data = all_results[all_results$sample%in%c("sc_10x_5cl","sc_CELseq2","sc_Dropseq","sc_Celseq2_5cl_p1","sc_Celseq2_5cl_p2","sc_Celseq2_5cl_p3"),],
mapping = aes(y = NMI, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('Cell Line Samples') +
ylab('NMI') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
list.of.boxplots[[6]] <- ggplot(data = all_results[all_results$sample%in%c("sc_10x_5cl","sc_CELseq2","sc_Dropseq","sc_Celseq2_5cl_p1","sc_Celseq2_5cl_p2","sc_Celseq2_5cl_p3"),],
mapping = aes(y = ASW, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('') +
ylab('ASW') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
ggarrange(plotlist = list.of.boxplots[1:3], ncol = 3, nrow = 2, labels = 'A', font.label = list(size = 24, face = 'bold'))
ggarrange(plotlist = list.of.boxplots[1:3], ncol = 3, nrow = 2, labels = c('A','','','C','','', font.label = list(size = 24, face = 'bold'))
ggarrange(plotlist = list.of.boxplots[1:3], ncol = 3, nrow = 2, labels = c('A','','','C','',''), font.label = list(size = 24, face = 'bold'))
ggarrange(plotlist = list.of.boxplots, ncol = 3, nrow = 2, labels = c('A','','','C','',''), font.label = list(size = 24, face = 'bold'))
list.of.boxplots[[2]] <- ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),],
mapping = aes(y = NMI, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('Cell Line Samples') +
ylab('NMI') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
boxplots <- ggarrange(plotlist = list.of.boxplots, ncol = 3, nrow = 2, labels = c('A','','','C','',''), font.label = list(size = 24, face = 'bold'))
boxplots <- annotate_figure(p = boxplots, top = text_grob("Benchmarking Metrices", size = 40, face = 'bold'))
boxplots
png(file = '/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/figure_1.png',
width = 1500, height = 2000)
ggpubr::ggarrange(plotlist = list(boxplots,fig4), ncol=1)
dev.off()
boxplots <- ggarrange(plotlist = list.of.boxplots, ncol = 3, nrow = 2, labels = c('A','','','C','',''), font.label = list(size = 24, face = 'bold'), common.legend = T, legend = 'top')
boxplots <- annotate_figure(p = boxplots, top = text_grob("Benchmarking Metrices", size = 40, face = 'bold'))
png(file = '/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/figure_1.png',
width = 1500, height = 2000)
ggpubr::ggarrange(plotlist = list(boxplots,fig4), ncol=1)
dev.off()
list.of.boxplots[[2]] <- ggplot(data = all_results[all_results$sample%in%c("celseq","celseq2","smartseq2","fluidigmc1","indrop1","indrop2","indrop3","indrop4"),],
mapping = aes(y = NMI, x = clustering_method, fill = normalisation)) +
geom_boxplot() +
theme_classic() +
ggtitle('Real Life Samples') +
ylab('NMI') + xlab('') +
theme(axis.text.x = element_text(colour = 'black', angle = 90, hjust = 1,
face = 'bold', size = 12),
plot.title = element_text(hjust = 0.5, face = 'bold', size = 25),
axis.text.y = element_text(colour = 'black', face = 'bold', size = 12),
legend.title = element_text(face = 'bold', color = 'black', size = 20),
legend.text = element_text(face = 'bold', color = 'black', size = 12),
axis.title.x.bottom = element_text(face = 'bold', size = 15),
axis.title.y.left = element_text(face = 'bold', size = 15)) +
guides(fill=guide_legend(title="Normalisation Method"))
boxplots <- ggarrange(plotlist = list.of.boxplots, ncol = 3, nrow = 2, labels = c('A','','','C','',''), font.label = list(size = 24, face = 'bold'), common.legend = T, legend = 'top')
boxplots <- annotate_figure(p = boxplots, top = text_grob("Benchmarking Metrices", size = 40, face = 'bold'))
png(file = '/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/figure_1.png',
width = 1500, height = 2000)
ggpubr::ggarrange(plotlist = list(boxplots,fig4), ncol=1)
dev.off()
nmi_v_ari <- ggpubr::ggscatter(data = all_results, x = 'ARI', y = c('NMI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#EFC00099'), title = 'ARI vs NMI')
nmi_v_asw <- ggpubr::ggscatter(data = all_results, x = 'ASW', y = c('NMI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#0073C299'), title = 'ASW vs NMI')
ari_v_asw <- ggpubr::ggscatter(data = all_results, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
nmi_v_ari+nmi_v_asw+ari_v_asw
nmi_v_ari <- ggpubr::ggscatter(data = all_results, x = 'ARI', y = c('NMI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#EFC00099'), title = 'ARI vs NMI')
nmi_v_asw <- ggpubr::ggscatter(data = all_results, x = 'ASW', y = c('NMI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#0073C299'), title = 'ASW vs NMI')
ari_v_asw <- ggpubr::ggscatter(data = all_results, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
nmi_v_ari+nmi_v_asw+ari_v_asw
nmi_v_ari+nmi_v_asw+ari_v_asw
nmi_v_asw
ari_v_asw <- ggpubr::ggscatter(data = real_life_results, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
ggpubr::ggscatter(data = real_life_results, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
ggpubr::ggscatter(data = cell_line_samples, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
ggpubr::ggscatter(data = simulation_samples, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
ggpubr::ggscatter(data = real_life_results, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
nmi_v_ari <- ggpubr::ggscatter(data = all_results, x = 'ARI', y = c('NMI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#EFC00099'), title = 'ARI vs NMI')
nmi_v_asw <- ggpubr::ggscatter(data = all_results, x = 'ASW', y = c('NMI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#0073C299'), title = 'ASW vs NMI')
ari_v_asw <- ggpubr::ggscatter(data = all_results, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
png('/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/correlation.png', width = 1600, height = 600)
nmi_v_ari+nmi_v_asw+ari_v_asw
ggarrange(plotlist = list(nmi_v_ari, nmi_v_asw, ari_v_asw))
ggarrange(plotlist = list(nmi_v_ari, nmi_v_asw, ari_v_asw), ncol = 3, nrow = 1)
dev.off()
dev.off()
png('/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/correlation.png', width = 1600, height = 600)
ggarrange(plotlist = list(nmi_v_ari, nmi_v_asw, ari_v_asw), ncol = 3, nrow = 1)
dev.off()
library(readxl)
Supplementary_Tables_1_4 <- read_excel("~/work/Writing/IBRAP_paper/Supplementary_Tables_1-4.xlsx")
View(Supplementary_Tables_1_4)
integrated_clustering_scores <- readRDS("~/work/Results/scRNA-seq/IBRAP_publication/integrated_clustering_scores.rds")
integrated_clustering_scores
ggpubr::ggscatter(data = integrated_clustering_scores, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
unique(integrated_clustering_scores$sample)
panc <- integrated_clustering_scores[integrated_clustering_scores$sample=='pancreas',]
unequal <- integrated_clustering_scores[integrated_clustering_scores$sample=='unequal',]
equal <- integrated_clustering_scores[integrated_clustering_scores$sample=='equal',]
ggpubr::ggscatter(data = panc, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
ggpubr::ggscatter(data = unequal, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
ggpubr::ggscatter(data = equal, x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
colnames(all_results)
scores <- all_results[,c('ARI','NMI','ASW')]
colnames(scores)
sscores <- integrated_clustering_scores[,c('ARI','NMI','ASW')]
rbind(scores, sscores)
ggpubr::ggscatter(data = rbind(scores, sscores), x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
ggpubr::ggscatter(data = rbind(scores, sscores), x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs NMI')
nmi_v_ari <- ggpubr::ggscatter(data = rbind(scores, sscores), x = 'ARI', y = c('NMI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#EFC00099'), title = 'ARI vs NMI')
nmi_v_asw <- ggpubr::ggscatter(data = rbind(scores, sscores), x = 'ASW', y = c('NMI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#0073C299'), title = 'ASW vs NMI')
ari_v_asw <- ggpubr::ggscatter(data = rbind(scores, sscores), x = 'ASW', y = c('ARI'),
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman", combine = T, color = c('#CD534C99'), title = 'ASW vs ARI')
png('/Users/knight05/work/Results/scRNA-seq/IBRAP_publication/figures/correlation.png', width = 1600, height = 600)
ggarrange(plotlist = list(nmi_v_ari, nmi_v_asw, ari_v_asw), ncol = 3, nrow = 1)
dev.off()
library('SeuratData')
library('Seurat')
library('IBRAP')
setwd( "/Users/knight05/work/Results/scRNA-seq/IBRAP_development/IBRAPwithdecontX/R")
files.sources = list.files()
sapply(files.sources, source)
options(future.globals.maxSize = 4000 * 1024^2)
panc8 <- LoadData('panc8')
smartseq2.counts <- panc8@assays$RNA@counts[,panc8@meta.data$dataset=='smartseq2']
smartseq2.meta <- panc8@meta.data[panc8@meta.data$dataset=='smartseq2',]
celseq2.counts <- panc8@assays$RNA@counts[,panc8@meta.data$dataset=='celseq2']
celseq2.meta <- panc8@meta.data[panc8@meta.data$dataset=='celseq2',]
rm(panc8)
smartseq2 <- createIBRAPobject(counts = smartseq2.counts,
original.project = 'smartseq2',
add.suffix = T,
meta.data = smartseq2.meta, min.cells = 3, min.features = 200, verbose = T)
celseq2 <- createIBRAPobject(counts = celseq2.counts,
original.project = 'celseq2',
add.suffix = T,
meta.data = celseq2.meta, min.cells = 3, min.features = 200, verbose = T)
smartseq2 <- perform.sct(object = smartseq2, verbose = T)
smartseq2 <- perform.scran(object = smartseq2, vars.to.regress = 'RAW_total.counts', verbose = T)
smartseq2 <- perform.scanpy(object = smartseq2, vars.to.regress = 'RAW_total.counts', verbose = T)
smartseq2 <- perform.tpm(object = smartseq2, vars.to.regress = 'RAW_total.counts', verbose = T)
celseq2 <- perform.pca(object = celseq2, assay = c('SCT','SCRAN','SCANPY'), print.variance = T)
smartseq2 <- perform.pca(object = smartseq2, assay = c('SCT','SCRAN','SCANPY'), print.variance = T)
smartseq2 <- perform.pca(object = smartseq2, assay = c('TPM'), print.variance = T)
smartseq2 <- perform.nn(object = smartseq2, assay = c('SCT','SCRAN','SCANPY','TPM'),
reduction = c('PCA'))
library(readr)
E_MTAB_9067_meta <- read_csv("~/Desktop/E-MTAB-9067_meta.csv")
View(E_MTAB_9067_meta)
E_MTAB_9067_meta$`Comment[BioSD_SAMPLE]`
unique(E_MTAB_9067_meta$`Comment[BioSD_SAMPLE]`)
E_MTAB_9067_meta$`Comment[BioSD_SAMPLE]`
unique(E_MTAB_9067_meta$`Characteristics[individual]`)
table(E_MTAB_9067_meta$`Comment[BioSD_SAMPLE]`)
E_MTAB_9067_meta$`Comment[BioSD_SAMPLE]`
table(E_MTAB_9067_meta$`Characteristics[individual]`)
colnames(E_MTAB_9067_meta)
table(E_MTAB_9067_meta$`Characteristics[individual]`)
table(E_MTAB_9067_meta$`Characteristics[sampling site]`)
table(E_MTAB_9067_meta$`Characteristics[sampling site]`, E_MTAB_9067_meta$`Characteristics[sampling site]`)
table(E_MTAB_9067_meta$`Characteristics[sampling site]`, E_MTAB_9067_meta$`Characteristics[individual]`)
View(E_MTAB_9067_meta$`Characteristics[individual]`=='Sample1')
View(E_MTAB_9067_meta[E_MTAB_9067_meta$`Characteristics[individual]`=='Sample1',])
E_MTAB_9067_meta[E_MTAB_9067_meta$`Characteristics[organism part]`=='bone marrow',]
bone_marrow <- E_MTAB_9067_meta[E_MTAB_9067_meta$`Characteristics[organism part]`=='bone marrow',]
bone_marrow
dim(bone_marrow)
table(bone_marrow$`Characteristics[individual]`)
bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample1',]
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample1',])
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample1',]$`Characteristics[sampling site]`)
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample2',])
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample2',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample3',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample4',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample5',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample6',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample7',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample8',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample9',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample10',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample11',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample12',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample13',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample14',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample15',]$`Characteristics[sampling site]`)
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample15',])
dim(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample15',])
table(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample15',]$`Characteristics[sampling site]`)
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample15',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample14',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample13',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample12',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample11',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample10',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample9',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample8',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample7',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample6',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample5',])
View(bone_marrow[bone_marrow$`Characteristics[individual]`=='Sample4',])
table(bone_marrow$`Characteristics[individual]`, bone_marrow$`Characteristics[developmental stage]`)
table(bone_marrow$`Characteristics[individual]`, bone_marrow$`Characteristics[age]`)
table(bone_marrow$`Characteristics[individual]`, bone_marrow$`Characteristics[sex]`)
table(bone_marrow$`Characteristics[individual]`, bone_marrow$`Characteristics[disease]`)
table(bone_marrow$`Characteristics[individual]`, bone_marrow$`Characteristics[organism part]`)
table(bone_marrow$`Characteristics[individual]`, bone_marrow$`Characteristics[sampling site]`)
library(readr)
GSE117156_metadata <- read_csv("~/Downloads/GSE117156_metadata.csv")
View(GSE117156_metadata)
unique(GSE117156_metadata$Experiment_ID)
GSE117156_metadata[GSE117156_metadata$Experiment_ID=="MARSseq_hip01_BMPC#1",]
dim(GSE117156_metadata[GSE117156_metadata$Experiment_ID=="MARSseq_hip01_BMPC#1",])
